#
# Qubes Builder Gitlab CI
#

stages:
  - test
  - prep
  - build

variables:
  DEBUG: "1"
  GIT_SUBMODULE_STRATEGY: recursive
  CI_RUN_PYTEST_JOBS:
    description: "Run all pytest jobs, default: 1"
  CI_RUN_COMPONENT_JOBS:
    description: "Run components jobs, default: 0"
  CI_RUN_TEMPLATE_JOBS:
    description: "Run template jobs, default: 0"
  CI_RUN_ISO_JOBS:
    description: "Run ISO jobs, default: 0"
  CI_RUN_ALL_JOBS:
    description: "Run all jobs, default: 0"

#
# job skeletons
#

.pytest:
  rules:
    - if: $CI_RUN_PYTEST_JOBS != "0" || $CI_RUN_ALL_JOBS == "1"
      when: always
    - when: never
  stage: test
  tags:
    - vm
  artifacts:
    paths:
      - artifacts/htmlcov/
    reports:
      junit: artifacts/qubesbuilder.xml
      coverage_report:
        coverage_format: cobertura
        path: artifacts/coverage.xml
  coverage: '/TOTAL.*\s(\d+)%/'
  variables:
    PYTEST_ARGS: -v --color=yes --showlocals --cov qubesbuilder --cov-report term --cov-report html:artifacts/htmlcov --cov-report xml:artifacts/coverage.xml --junitxml=artifacts/qubesbuilder.xml
  # https://gitlab.com/gitlab-org/gitlab/-/issues/15603
  before_script:
    - sudo dnf install -y python3-pip python3-pytest-cov python3-pytest python3-pytest-mock python3-lxml python3-wheel sequoia-sqv
    - sudo rm -rf ~/pytest-of-user/
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    - mkdir ~/gitlab ~/tmp
    - export PYTHONPATH=".:$PYTHONPATH" BASE_ARTIFACTS_DIR=~/gitlab TMPDIR=~/tmp
    - env
  after_script:
  - ci/codecov-wrapper -f artifacts/coverage.xml

.init_cache_job:
  rules:
    - if: $CI_RUN_CACHE_JOBS == "1" || $CI_RUN_COMPONENT_JOBS == "1" || $CI_RUN_ALL_JOBS == "1"
      when: always
    - when: never
  stage: prep
  tags:
    - vm
  artifacts:
    paths:
      - artifacts.tar.xz
  before_script:
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - ./qb --builder-conf tests/builder-ci.yml -d "${CI_JOB_NAME#cache-}" package init-cache
    - tar cJf artifacts.tar.xz --strip-components=1 artifacts

.component_job:
  rules:
    - if: $CI_RUN_COMPONENT_JOBS == "1" || $CI_RUN_ALL_JOBS == "1"
      when: always
    - when: never

.component_docker_job:
  extends: .component_job
  stage: build
  tags:
    - vm
  artifacts:
    paths:
      - artifacts
    when: always
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    - tar xf artifacts.tar.xz
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - ./qb --builder-conf tests/builder-ci.yml -d "${CI_JOB_NAME#docker-}" ${QB_EXTRA_ARGS} package all
  after_script:
    - rm -rf artifacts/cache
    - tree artifacts

.component_podman_job:
  extends: .component_job
  stage: build
  tags:
    - vm
  artifacts:
    paths:
      - artifacts
    when: always
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - sudo sed -i "/$(id -u -n)/d" /etc/subuid
    - sudo sed -i "/$(id -g -n)/d" /etc/subgid
    - echo $(id -u -n):$(( $(id -u)*65536 )):65536 | sudo tee -a /etc/subuid
    - echo $(id -g -n):$(( $(id -g)*65536 )):65536 | sudo tee -a /etc/subgid
    - systemctl --user start podman
    - podman pull docker.io/fepitre/qubes-builder-fedora:latest
    - podman tag docker.io/fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    - tar xf artifacts.tar.xz
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - sed -i 's/docker/podman/' tests/builder-ci.yml
    - ./qb --builder-conf tests/builder-ci.yml -d "${CI_JOB_NAME#podman-}" ${QB_EXTRA_ARGS} package all
  after_script:
    - rm -rf artifacts/cache
    - tree artifacts

.component_qubes_job:
  extends: .component_job
  stage: build
  tags:
    - qubes
  artifacts:
    paths:
      - artifacts
    when: always
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - tar xf artifacts.tar.xz
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - sed -i 's/docker/qubes/' tests/builder-ci.yml
    - "sed -i 's/user: gitlab-runner/user: user/; s/group: gitlab-runner/group: user/' tests/builder-ci.yml"
    - ./qb --builder-conf tests/builder-ci.yml -d "${CI_JOB_NAME#qubes-}" --option executor:type=qubes --option executor:options:dispvm=builder-dvm ${QB_EXTRA_ARGS} package all
  after_script:
    - rm -rf artifacts/cache
    - tree artifacts

.component_local_job:
  extends: .component_job
  stage: build
  tags:
    - vm
  artifacts:
    paths:
      - artifacts
    when: always
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - tar xf artifacts.tar.xz
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - ./qb --builder-conf tests/builder-ci.yml -d "${CI_JOB_NAME#local-}" --option executor:type=local --option executor:options:directory=/home/gitlab-runner/tmp ${QB_EXTRA_ARGS} package all
  after_script:
    - rm -rf artifacts/cache
    - tree artifacts

.template_qubes_job:
  rules:
    - if: $CI_RUN_TEMPLATE_JOBS == "1" || $CI_RUN_ALL_JOBS == "1"
      when: always
    - when: never
  stage: build
  tags:
    - qubes
  before_script:
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - ./qb --builder-conf tests/builder-ci.yml -c builder-rpm -c builder-debian -c template-whonix -c builder-archlinux -c qubes-release package fetch
    - ./qb --builder-conf tests/builder-ci.yml -t "${CI_JOB_NAME#qubes-template-}" --option executor:type=qubes --option executor:options:dispvm=builder-dvm template all

.installer_iso:
  rules:
    - if: $CI_RUN_ISO_JOBS == "1" || $CI_RUN_ALL_JOBS == "1"
      when: always
    - when: never
  stage: build
  tags:
    - vm
  artifacts:
    paths:
      - artifacts/installer
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    - sudo dnf install -y python3-debian dpkg-dev openssl tree mktorrent
  script:
    - ./qb --builder-conf tests/builder-ci.yml -c qubes-release package fetch
    - 'sh -c "$EXPECT_FAILURE ./qb --builder-conf tests/builder-ci.yml -o iso:kickstart=$KICKSTART_FILE installer init-cache all"'
  after_script:
    - rm -rf artifacts/cache
    - tree artifacts

#
# test
#

pytest-cli-component-vm-archlinux:
  extends: .pytest
  script:
    - pytest-3 $PYTEST_ARGS tests/test_cli.py -k test_component_vm_archlinux

cache-vm-archlinux:
  extends: .init_cache_job

docker-vm-archlinux:
  extends: .component_docker_job
  needs:
    - cache-vm-archlinux
