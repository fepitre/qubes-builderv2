#
# Qubes Builder Gitlab CI
#

stages:
  - test
  - prep
  - build

variables:
  DEBUG: "1"
  GIT_SUBMODULE_STRATEGY: recursive

#
# test
#

lint:
  stage: test
  image: fedora:37
  tags:
    - docker
  before_script:
    - sudo dnf install -y python3-black
  script:
    - black -v --diff --color --check qubesbuilder

mypy:
  stage: test
  image: fedora:37
  tags:
    - docker
  before_script:
    - sudo dnf install -y python3-mypy python3-pip
    - sudo python3 -m pip install types-PyYAML types-python-dateutil
  script:
    - mypy --install-types --non-interactive --junit-xml mypy.xml qubesbuilder
  artifacts:
    reports:
      junit: mypy.xml

shellcheck:
  stage: test
  image: fedora:37
  tags:
    - docker
  before_script:
    - sudo dnf install -y ShellCheck git
  script:
    - shellcheck -x -e SC1117 $(grep -l '^#!/bin/\(ba\)\?sh' $(git ls-files))

# 'qubes' is a shell executor so docker image will be stored in local docker system
generate-container-image:
  stage: test
  tags:
    - qubes
  script:
    - sudo dnf install -y mock
    - tools/generate-container-image.sh docker fedora-38-x86_64

.pytest:
  rules:
    - if: $CI_RUN_PYTEST_JOBS != "1" || $CI_RUN_ALL_JOBS == "1"
      when: always
    - when: never
  stage: test
  tags:
    - qubes
  artifacts:
    paths:
      - artifacts/htmlcov/
    reports:
      junit: artifacts/qubesbuilder.xml
      coverage_report:
        coverage_format: cobertura
        path: artifacts/coverage.xml
  coverage: '/TOTAL.*\s(\d+)%/'
  needs:
    - generate-container-image
  variables:
    PYTHONPATH: .
    TMPDIR: /home/user
    PYTEST_ARGS: -v --color=yes --showlocals --cov qubesbuilder --cov-report term --cov-report html:artifacts/htmlcov --cov-report xml:artifacts/coverage.xml --junitxml=artifacts/qubesbuilder.xml
  # https://gitlab.com/gitlab-org/gitlab/-/issues/15603
  before_script:
    - sudo dnf install -y python3-pip python3-pytest-cov python3-pytest
    - sudo rm -rf ~/pytest-of-user/
    - git clone https://github.com/qubesos/qubes-infrastructure-mirrors
    - (cd qubes-infrastructure-mirrors; pip3 install .)
    - export "PATH=$PATH:$HOME/.local/bin"
    - export "PYTHONPATH=$PYTHONPATH:$HOME/.local/lib/python3.10/site-packages"
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest

pytest:
  extends: .pytest
  script:
    - echo "$PYTHONPATH"
    - pytest-3 $PYTEST_ARGS tests/test_executors.py tests/test_functions.py tests/test_objects.py

pytest-cli-component:
  extends: .pytest
  script:
    - pytest-3 $PYTEST_ARGS tests/test_cli.py -k test_component_

pytest-cli-increment-component:
  extends: .pytest
  script:
    - pytest-3 $PYTEST_ARGS tests/test_cli.py -k test_increment_component_

pytest-cli-template:
  extends: .pytest
  script:
    - pytest-3 $PYTEST_ARGS tests/test_cli.py -k test_template_

#
# build job skeleton
#

.component_job:
  rules:
    - if: $CI_RUN_COMPONENT_JOBS == "1" || $CI_RUN_ALL_JOBS == "1"
      when: always
    - when: never

.init_cache_job:
  extends: .component_job
  stage: prep
  tags:
    - vm
  artifacts:
    paths:
      - artifacts.tar.xz
  before_script:
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - cp tests/builder-ci.yml builder.yml
    - ./qb -d "${CI_JOB_NAME#cache-}" package init-cache
    - tar cJf artifacts.tar.xz --strip-components=1 artifacts

.component_docker_job:
  extends: .component_job
  stage: build
  tags:
    - vm
  artifacts:
    paths:
      - artifacts
    when: always
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    - tar xf artifacts.tar.xz
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - cp tests/builder-ci.yml builder.yml
    - ./qb -d "${CI_JOB_NAME#docker-}" ${QB_EXTRA_ARGS} package all
  after_script:
    - rm -rf artifacts/cache
    - tree artifacts

.component_podman_job:
  extends: .component_job
  stage: build
  tags:
    - vm
  artifacts:
    paths:
      - artifacts
    when: always
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - sudo sed -i "/$(id -u -n)/d" /etc/subuid
    - sudo sed -i "/$(id -g -n)/d" /etc/subgid
    - echo $(id -u -n):$(( $(id -u)*65536 )):65536 | sudo tee -a /etc/subuid
    - echo $(id -g -n):$(( $(id -g)*65536 )):65536 | sudo tee -a /etc/subgid
    - systemctl --user start podman
    - podman pull docker.io/fepitre/qubes-builder-fedora:latest
    - podman tag docker.io/fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    - tar xf artifacts.tar.xz
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - cp tests/builder-ci.yml builder.yml
    - sed -i 's/docker/podman/' builder.yml
    - ./qb -d "${CI_JOB_NAME#podman-}" ${QB_EXTRA_ARGS} package all
  after_script:
    - rm -rf artifacts/cache
    - tree artifacts

.component_qubes_job:
  extends: .component_job
  stage: build
  tags:
    - qubes
  artifacts:
    paths:
      - artifacts
    when: always
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - tar xf artifacts.tar.xz
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - cp tests/builder-ci.yml builder.yml
    - sed -i 's/docker/qubes/' builder.yml
    - ./qb -d "${CI_JOB_NAME#qubes-}" --option executor:type=qubes --option executor:options:dispvm=builder-dvm ${QB_EXTRA_ARGS} package all
  after_script:
    - rm -rf artifacts/cache
    - tree artifacts

.component_local_job:
  extends: .component_job
  stage: build
  tags:
    - vm
  artifacts:
    paths:
      - artifacts
    when: always
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - tar xf artifacts.tar.xz
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - cp tests/builder-ci.yml builder.yml
    - ./qb -d "${CI_JOB_NAME#local-}" --option executor:type=local --option executor:options:directory=/home/gitlab-runner/tmp ${QB_EXTRA_ARGS} package all
  after_script:
    - rm -rf artifacts/cache
    - tree artifacts

.template_qubes_job:
  rules:
    - if: $CI_RUN_TEMPLATE_JOBS == "1" || $CI_RUN_ALL_JOBS == "1"
      when: always
    - when: never
  stage: build
  tags:
    - qubes
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - sudo dnf install -y python3-debian dpkg-dev openssl tree pacman
  script:
    - cp tests/builder-ci.yml builder.yml
    - ./qb -c builder-rpm -c builder-debian -c template-whonix package fetch
    - ./qb -t "${CI_JOB_NAME#qubes-template-}" --option executor:type=qubes --option executor:options:dispvm=builder-dvm template all


.installer_iso:
  rules:
    - if: $CI_RUN_ISO_JOBS == "1" || $CI_RUN_ALL_JOBS == "1"
      when: always
    - when: never
  stage: build
  tags:
    - vm
  artifacts:
    paths:
      - artifacts/installer
  before_script:
    - cp -Tr tests/gnupg ~/.gnupg
    - chmod 700 ~/.gnupg
    - docker pull fepitre/qubes-builder-fedora:latest
    - docker tag fepitre/qubes-builder-fedora:latest qubes-builder-fedora:latest
    - sudo dnf install -y python3-debian dpkg-dev openssl tree mktorrent
  script:
    - cp tests/builder-ci.yml builder.yml
    - 'sh -c "$EXPECT_FAILURE ./qb -o iso:kickstart=$KICKSTART_FILE installer init-cache all"'
  after_script:
    - rm -rf artifacts/cache
    - tree artifacts



#
# Components
#

# Cache

cache-host-fc37:
  extends: .init_cache_job

cache-vm-fc38:
  extends: .init_cache_job

cache-vm-centos-stream8:
  extends: .init_cache_job

cache-vm-bullseye:
  extends: .init_cache_job

cache-vm-archlinux:
  extends: .init_cache_job

cache-vm-jammy:
  extends: .init_cache_job

# Podman executor

podman-host-fc37:
  extends: .component_podman_job
  needs:
    - cache-host-fc37

podman-vm-fc38:
  extends: .component_podman_job
  needs:
    - cache-vm-fc38

podman-vm-centos-stream8:
  extends: .component_podman_job
  needs:
    - cache-vm-centos-stream8

#podman-vm-bullseye:
#  extends: .component_podman_job

# Docker executor

docker-host-fc37:
  extends: .component_docker_job
  needs:
    - cache-host-fc37

docker-vm-fc38:
  extends: .component_docker_job
  needs:
    - cache-vm-fc38

docker-vm-centos-stream8:
  extends: .component_docker_job
  needs:
    - cache-vm-centos-stream8

docker-vm-bullseye:
  extends: .component_docker_job
  needs:
    - cache-vm-bullseye

docker-vm-archlinux:
  extends: .component_docker_job
  needs:
    - cache-vm-archlinux

#docker-vm-jammy:
#  extends: .component_docker_job
#  variables:
#    QB_EXTRA_ARGS: "-o +components+vmm-xen-guest -c vmm-xen-guest -c core-vchan-xen"
#  needs:
#    - cache-vm-jammy

# Qubes executor

qubes-host-fc37:
  extends: .component_qubes_job
  needs:
    - cache-host-fc37

qubes-vm-fc38:
  extends: .component_qubes_job
  needs:
    - cache-vm-fc38

qubes-vm-centos-stream8:
  extends: .component_qubes_job
  needs:
    - cache-vm-centos-stream8

qubes-vm-bullseye:
  extends: .component_qubes_job
  needs:
    - cache-vm-bullseye

# Local executor

local-host-fc37:
  extends: .component_local_job
  needs:
    - cache-host-fc37

local-vm-fc38:
  extends: .component_local_job
  needs:
    - cache-vm-fc38

local-vm-centos-stream8:
  extends: .component_local_job
  needs:
    - cache-vm-centos-stream8

local-vm-bullseye:
  extends: .component_local_job
  needs:
    - cache-vm-bullseye

#
# Templates
#

qubes-template-fedora-38-xfce:
  extends: .template_qubes_job

qubes-template-centos-stream-8:
  extends: .template_qubes_job

qubes-template-debian-11:
  extends: .template_qubes_job

qubes-template-whonix-gateway-16:
  extends: .template_qubes_job

qubes-template-whonix-workstation-16:
  extends: .template_qubes_job
  allow_failure: true

#qubes-template-archlinux:
#  extends: .template_qubes_job

#
# ISO
#

installer-iso-online-testing:
  variables:
    KICKSTART_FILE: conf/iso-online-testing.ks
    EXPECT_FAILURE: ""
  extends: .installer_iso

installer-iso-unsigned:
  variables:
    KICKSTART_FILE: conf/iso-unsigned.ks
    EXPECT_FAILURE: "!"
  extends: .installer_iso

installer-iso-unsigned2:
  variables:
    KICKSTART_FILE: conf/iso-unsigned2.ks
    EXPECT_FAILURE: "!"
  extends: .installer_iso

installer-iso-unknown-key:
  variables:
    KICKSTART_FILE: conf/iso-unknown-key.ks
    EXPECT_FAILURE: "!"
  extends: .installer_iso
